{"version":3,"sources":["App.js","reportWebVitals.js","Template.js","Components/MisConfig.js","Home.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Template","className","MisConfig","props","data","style","Misconfigurations","map","value","key","border","borderColor","padding","Title","Description","Message","Namespace","Query","Resolution","Status","myHeaders","Headers","append","Home","useState","dockerConfig","setDockerConfig","projectName","setProjectName","trivyResp","setTrivyResp","type","name","onChange","e","target","placeholder","onClick","raw","JSON","stringify","fetch","method","headers","body","redirect","response","json","result","dockerfile","catch","error","console","log","wrap","cols","rows","parse","trivy_response","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.477bde76.chunk.js","sourcesContent":["import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <form method=\"POST\" action=\".\">\n          <div className=\"form-element\">\n            <p>Type project name:</p>\n            <input type=\"text\" name=\"project-name\" placeholder=\"Project name\" />\n          </div>\n          <div className=\"form-element\">\n            <p>make your docker file:</p>\n            <textarea rows=\"15\" cols=\"80\" name=\"about\" />\n          </div>\n          <div className=\"form-element\">\n            <p>scan docker file:</p>\n            <button>scan</button>\n          </div>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './Template.css';\n\nfunction Template() {\n  return (\n    <div className=\"Template\">\n        <h4>TEMPLATE--1</h4>\n        <div className=\"Rectangle\">\n        <table>\n  <tr>\n    <th> </th>\n    <th>Capability Name </th>\n    <th>Capability ID </th>\n  </tr>\n  <tr>\n    <td>1.</td>\n    <td>ADD</td>\n    <td>CAP_1</td>\n  </tr>\n  <tr>\n    <td>2.</td>\n    <td>ADD</td>\n    <td>CAP_2</td>\n  </tr>\n  <tr>\n    <td>3.</td>\n    <td>ADD</td>\n    <td>CAP_</td>\n  </tr>\n</table>\n</div>\n   <button>ADD</button>\n   <h4>TEMPLATE--2</h4>\n        <div className=\"Rectangle\">\n        <table>\n  <tr>\n    <th> </th>\n    <th>Capability Name </th>\n    <th>Capability ID </th>\n  </tr>\n  <tr>\n    <td>1.</td>\n    <td>ADD</td>\n    <td>CAP_1</td>\n  </tr>\n  <tr>\n    <td>2.</td>\n    <td>ADD</td>\n    <td>CAP_2</td>\n  </tr>\n  <tr>\n    <td>3.</td>\n    <td>ADD</td>\n    <td>CAP_</td>\n  </tr>\n</table>\n</div>\n   <button>ADD</button>\n     </div>\n  );\n}\n\nexport default Template;","import React from 'react';\nimport './styles.css'\n\nfunction MisConfig(props){\n    // console.log(props.data[0])\n    let data = props.data[0];\n    return(\n        <div style={{\n            \n        }}>\n            {data.Misconfigurations.map((value, key) => {\n                // console.log(value)\n                // value.forEach((k, v) => {\n                //     console.log(k, v)\n                // })\n                return <div style={{\n                    border: 2,\n                    borderColor: 'white',\n                    // backgroundColor: 'grey',\n                    padding: 5,\n                }} key={key}>\n\n                        {/* <p>Type: {value.Type}</p>\n                        <p>ID: {value.ID}</p> */}\n                        <h3>Title: {value.Title}</h3>\n                        <p>Description: {value.Description}</p>\n                        <p>Message: {value.Message}</p>\n                        <p>Namespace: {value.Namespace}</p>\n                        <p>Query: {value.Query}</p>\n                        <p>Resolution: {value.Resolution}</p>\n                        <p>Status: {value.Status}</p>\n                    </div>\n            })}\n        </div>\n    )\n}\n\nexport default MisConfig;","import { useState } from 'react';\nimport './Home.css';\nimport Template from './Template';\n// import textEditor from './textEditor';\nimport MisConfigs from './Components/MisConfig';\n\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n\nfunction Home() {\n\n  const [dockerConfig, setDockerConfig] = useState('');\n  const [projectName, setProjectName] = useState('');\n  const [trivyResp, setTrivyResp] = useState('');\n\n  const onClickSync = () => {\n    var raw = JSON.stringify({\n      \"project_name\": projectName\n    });\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://127.0.0.1:5000/create_project/\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      // console.log(result.dockerfile)\n      setDockerConfig(result.dockerfile)\n    })\n    .catch(error => console.log('error', error));\n  }\n\n  const onClickScan = () => {\n    var raw = JSON.stringify({\n      \"project_name\": projectName,\n      \"docker_content\": dockerConfig\n    });\n    \n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://127.0.0.1:5000/scan/\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      console.log(JSON.parse(result.trivy_response))\n      setTrivyResp(JSON.parse(result.trivy_response))\n    })\n    .catch(error => console.log('error', error));\n  }\n\n  // const handleChange = (e) => {\n  //   console.log(e.target.value);\n  // }\n\n  return (\n    <div className=\"Homepage\">\n        <div className=\"Homepage\">\n          <div className=\"form-element\">\n            <p>Project name:</p>\n            <input \n            type=\"text\" \n            name=\"project name\" \n            onChange={(e) => setProjectName(e.target.value)}\n            placeholder=\"Project name\" />\n            <button onClick={onClickSync}>sync</button>\n          </div> \n          <div className=\"form-element\">\n            <p>Configure docker file:</p>\n            <textarea \n              value={dockerConfig} \n              onChange={e => setDockerConfig(e.target.value)} \n              wrap=\"off\" cols=\"50\" rows=\"20\">\n            </textarea>\n          </div> \n          <div className=\"form-element\">\n            <button onClick={onClickScan}>scan</button>\n          </div>\n          <div>\n            { trivyResp !== '' && <MisConfigs data={trivyResp} />}\n          </div>\n          <div className=\"form-element\">\n          <p>Choose from Templates:</p>\n            <Template />\n          </div>\n          <div className=\"form-element\">\n            <button>build</button>\n          </div>\n          </div>\n     </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Home from './Home'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Home />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}