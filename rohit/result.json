[
  {
    "Target": "DockerCmps.yml",
    "Class": "config",
    "Type": "kubernetes",
    "MisconfSummary": {
      "Successes": 18,
      "Failures": 10,
      "Exceptions": 0
    },
    "Misconfigurations": [
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV001",
        "Title": "Process can elevate its own privileges",
        "Description": "A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should set 'securityContext.allowPrivilegeEscalation' to false",
        "Namespace": "appshield.kubernetes.KSV001",
        "Query": "data.appshield.kubernetes.KSV001.deny",
        "Resolution": "Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv001",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/appshield/ksv001"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV003",
        "Title": "Default capabilities not dropped",
        "Description": "The container should drop all default capabilities and add only those that are needed for its execution.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should add 'ALL' to 'securityContext.capabilities.drop'",
        "Namespace": "appshield.kubernetes.KSV003",
        "Query": "data.appshield.kubernetes.KSV003.deny",
        "Resolution": "Add 'ALL' to containers[].securityContext.capabilities.drop.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv003",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/",
          "https://avd.aquasec.com/appshield/ksv003"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV011",
        "Title": "CPU not limited",
        "Description": "Enforcing CPU limits prevents DoS via resource exhaustion.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should set 'resources.limits.cpu'",
        "Namespace": "appshield.kubernetes.KSV011",
        "Query": "data.appshield.kubernetes.KSV011.deny",
        "Resolution": "Set a limit value under 'containers[].resources.limits.cpu'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv011",
        "References": [
          "https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits",
          "https://avd.aquasec.com/appshield/ksv011"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV012",
        "Title": "Runs as root user",
        "Description": "'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should set 'securityContext.runAsNonRoot' to true",
        "Namespace": "appshield.kubernetes.KSV012",
        "Query": "data.appshield.kubernetes.KSV012.deny",
        "Resolution": "Set 'containers[].securityContext.runAsNonRoot' to true.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv012",
        "References": [
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted",
          "https://avd.aquasec.com/appshield/ksv012"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV014",
        "Title": "Root file system is not read-only",
        "Description": "An immutable root file system prevents applications from writing to their local disk. This can limit intrusions, as attackers will not be able to tamper with the file system or write foreign executables to disk.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should set 'securityContext.readOnlyRootFilesystem' to true",
        "Namespace": "appshield.kubernetes.KSV014",
        "Query": "data.appshield.kubernetes.KSV014.deny",
        "Resolution": "Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv014",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-readonlyrootfilesystem-true/",
          "https://avd.aquasec.com/appshield/ksv014"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV016",
        "Title": "Memory requests not specified",
        "Description": "When containers have memory requests specified, the scheduler can make better decisions about which nodes to place pods on, and how to deal with resource contention.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should set 'resources.requests.memory'",
        "Namespace": "appshield.kubernetes.KSV016",
        "Query": "data.appshield.kubernetes.KSV016.deny",
        "Resolution": "Set 'containers[].resources.requests.memory'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv016",
        "References": [
          "https://kubesec.io/basics/containers-resources-limits-memory/",
          "https://avd.aquasec.com/appshield/ksv016"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV018",
        "Title": "Memory not limited",
        "Description": "Enforcing memory limits prevents DoS via resource exhaustion.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should set 'resources.limits.memory'",
        "Namespace": "appshield.kubernetes.KSV018",
        "Query": "data.appshield.kubernetes.KSV018.deny",
        "Resolution": "Set a limit value under 'containers[].resources.limits.memory'.",
        "Severity": "LOW",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv018",
        "References": [
          "https://kubesec.io/basics/containers-resources-limits-memory/",
          "https://avd.aquasec.com/appshield/ksv018"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV019",
        "Title": "Seccomp policies disabled",
        "Description": "A program inside the container can bypass Seccomp protection policies.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should specify a seccomp profile",
        "Namespace": "appshield.kubernetes.KSV019",
        "Query": "data.appshield.kubernetes.KSV019.deny",
        "Resolution": "Remove the 'unconfined' value from 'container.seccomp.security.alpha.kubernetes.io'.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv019",
        "References": [
          "https://kubesec.io/basics/metadata-annotations-container-seccomp-security-alpha-kubernetes-io-pod/",
          "https://avd.aquasec.com/appshield/ksv019"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV020",
        "Title": "Runs with low user ID",
        "Description": "Force the container to run with user ID \u003e 10000 to avoid conflicts with the host’s user table.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should set 'securityContext.runAsUser' \u003e 10000",
        "Namespace": "appshield.kubernetes.KSV020",
        "Query": "data.appshield.kubernetes.KSV020.deny",
        "Resolution": "Set 'containers[].securityContext.runAsUser' to an integer \u003e 10000.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv020",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-runasuser/",
          "https://avd.aquasec.com/appshield/ksv020"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      },
      {
        "Type": "Kubernetes Security Check",
        "ID": "KSV021",
        "Title": "Runs with low group ID",
        "Description": "Force the container to run with group ID \u003e 10000 to avoid conflicts with the host’s user table.",
        "Message": "Container 'hello-app' of Deployment 'helloweb' should set 'securityContext.runAsGroup' \u003e 10000",
        "Namespace": "appshield.kubernetes.KSV021",
        "Query": "data.appshield.kubernetes.KSV021.deny",
        "Resolution": "Set 'containers[].securityContext.runAsGroup' to an integer \u003e 10000.",
        "Severity": "MEDIUM",
        "PrimaryURL": "https://avd.aquasec.com/appshield/ksv021",
        "References": [
          "https://kubesec.io/basics/containers-securitycontext-runasuser/",
          "https://avd.aquasec.com/appshield/ksv021"
        ],
        "Status": "FAIL",
        "Layer": {
          "DiffID": "sha256:67c0a1cb8cda6c4a831cdbeb9af952994bb818901fda0a24d8ead5366e67e3c1"
        }
      }
    ]
  }
]